<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:beans="http://www.springframework.org/schema/beans"
  xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
  xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd">
  <!-- Enable @Controller annotation support -->
  <mvc:annotation-driven />
 
	<context:component-scan base-package="com.cecs" />
	<mvc:resources mapping="/Resources/**" location="/Resources/" />
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix">
			<value>/WEB-INF/</value>
		</property>
		<property name="suffix">
			<value>.jsp</value>
		</property>
	</bean>
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
<!-- 		<bean id="myDataSource" class="org.apache.commons.dbcp.BasicDataSource" -->
<!-- 			destroy-method="close"> -->
			<property name="driverClassName" value="com.mysql.jdbc.Driver" />
			<property name="url" value="jdbc:mysql://localhost:3306/cecs" />
			<property name="username" value="root" />
			<property name="password" value="1234" />
<!-- 			<property name="validationQuery" value="SELECT 1" /> -->
		</bean>
		<bean id="mySessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
    <property name="dataSource" ref="dataSource"/>
    <property name="packagesToScan">
      <array>
        <value>CECS</value>
         <value>com.cecs</value>
      </array>
    </property>
    <property name="hibernateProperties">
      <value>
        hibernate.dialect=org.hibernate.dialect.MySQLDialect
      </value>
    </property>
  </bean>
   <bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">

		 <!-- setting maximum upload size -->
		<property name="maxUploadSize" >
<value>10000000000</value>
</property>
	</bean>
 
    <beans:bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <beans:property name="messageConverters">
            <beans:list>
                <beans:ref bean="jsonMessageConverter"/>
            </beans:list>
        </beans:property>
    </beans:bean>
     
    <!-- Configure bean to convert JSON to POJO and vice versa -->
    <beans:bean id="jsonMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
    </beans:bean> 
    <bean id="transactionManager" class="org.springframework.batch.support.transaction.ResourcelessTransactionManager"/>  
   
<!--     <bean id="jobLauncher" class="org.springframework.batch.core.launch.support.SimpleJobLauncher">   -->
<!--         <property name="jobRepository" ref="jobRepository"/>   -->
<!--     </bean>   -->
   
<!--     <bean id="jobRepository" class="org.springframework.batch.core.repository.support.MapJobRepositoryFactoryBean">   -->
<!--         <property name="transactionManager" ref="transactionManager"/>   -->
<!--     </bean>   -->
   
<!--     <bean id="simpleJob" class="org.springframework.batch.core.job.SimpleJob" abstract="true">   -->
<!--         <property name="jobRepository" ref="jobRepository" />   -->
<!--     </bean>   -->
  
</beans>